
. cap mkdir ./output/graphs

. 
. * Generates line graphs with rate of outpatient appointments over time
. foreach this_group in appt_rate appt_first_rate {
  2.         import delimited using ./output/measures/measure_op_`this_group'.c
> sv, numericcols(3) clear
  3.         * Generate rate per 100,000
.         gen rate = value*100000 
  4.         * Format date
.         gen dateA = date(date, "YMD")
  5.         drop date
  6.         format dateA %dD/M/Y
  7.         * Generate line graph
.         graph twoway line rate date, tlabel(01Apr2019(120)01Apr2022, angle(45
> ) ///
>         format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Dat
> e") ylabel(, labsize(small) ///
>         angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) legend(row(1) size(s
> mall) title("Ethnic categories", size(small)))
  8. 
.         graph export ./output/graphs/line_`this_group'.svg, as(svg) replace
  9.         }
(4 vars, 37 obs)
(note: file ./output/graphs/line_appt_rate.svg not found)
(file ./output/graphs/line_appt_rate.svg written in SVG format)
(4 vars, 37 obs)
(note: file ./output/graphs/line_appt_first_rate.svg not found)
(file ./output/graphs/line_appt_first_rate.svg written in SVG format)

. * Graphs stratified by medium of appointment
. import delimited using ./output/measures/measure_op_appt_medium_rate.csv, num
> ericcols(3) clear
(5 vars, 370 obs)

. * Generate rate per 100,000
. gen rate = value*100000 

. * Format date
. gen dateA = date(date, "YMD")

. drop date

. format dateA %dD/M/Y

. * Drop if medium is missing
. drop if op_appt_medium==.
(37 observations deleted)

. * reshape dataset so columns with rates for each ethnicity 
. reshape wide value rate population op_appt, i(dateA) j(op_appt_medium)
(note: j = 1 2 3 4 5 6 7 8 98)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      333   ->      37
Number of variables                   6   ->      37
j variable (9 values)    op_appt_medium   ->   (dropped)
xij variables:
                                  value   ->   value1 value2 ... value98
                                   rate   ->   rate1 rate2 ... rate98
                             population   ->   population1 population2 ... popu
> lation98
                                op_appt   ->   op_appt1 op_appt2 ... op_appt98
-----------------------------------------------------------------------------

. describe

Contains data
  obs:            37                          
 vars:            37                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dateA           float   %dD/M/Y               
op_appt1        int     %8.0g                 1 op_appt
population1     int     %8.0g                 1 population
value1          float   %9.0g                 1 value
rate1           float   %9.0g                 1 rate
op_appt2        int     %8.0g                 2 op_appt
population2     int     %8.0g                 2 population
value2          float   %9.0g                 2 value
rate2           float   %9.0g                 2 rate
op_appt3        int     %8.0g                 3 op_appt
population3     int     %8.0g                 3 population
value3          float   %9.0g                 3 value
rate3           float   %9.0g                 3 rate
op_appt4        int     %8.0g                 4 op_appt
population4     int     %8.0g                 4 population
value4          float   %9.0g                 4 value
rate4           float   %9.0g                 4 rate
op_appt5        int     %8.0g                 5 op_appt
population5     int     %8.0g                 5 population
value5          float   %9.0g                 5 value
rate5           float   %9.0g                 5 rate
op_appt6        int     %8.0g                 6 op_appt
population6     int     %8.0g                 6 population
value6          float   %9.0g                 6 value
rate6           float   %9.0g                 6 rate
op_appt7        int     %8.0g                 7 op_appt
population7     int     %8.0g                 7 population
value7          float   %9.0g                 7 value
rate7           float   %9.0g                 7 rate
op_appt8        int     %8.0g                 8 op_appt
population8     int     %8.0g                 8 population
value8          float   %9.0g                 8 value
rate8           float   %9.0g                 8 rate
op_appt98       int     %8.0g                 98 op_appt
population98    int     %8.0g                 98 population
value98         float   %9.0g                 98 value
rate98          float   %9.0g                 98 rate
-------------------------------------------------------------------------------
Sorted by: dateA

. * Generate line graph
. graph twoway line rate1 rate2 rate3 rate4 rate5 rate6 rate7 rate8 rate98 date
> , tlabel(01Apr2019(120)01Apr2022, angle(45) ///
> format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") ylab
> el(, labsize(small) ///
> angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) legend(row(1) size(small) ti
> tle("Ethnic categories", size(small)))

. 
. graph export ./output/graphs/line_op_appt_medium.svg, as(svg) replace
(note: file ./output/graphs/line_op_appt_medium.svg not found)
(file ./output/graphs/line_op_appt_medium.svg written in SVG format)

. 
end of do-file

. . file open output using "/tmp/tmp.aI0wucENpc", write text replace

. . file write output "success" 

. . file close output

. 
end of do-file


