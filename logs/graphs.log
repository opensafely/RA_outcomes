
. cap mkdir ./output/graphs

. 
. * Generates line graphs with rate of outpatient appointments over time
. foreach this_group in appt_rate appt_first_rate {
  2.         import delimited using ./output/measures/measure_op_`this_group'.c
> sv, numericcols(3) clear
  3.         * Generate rate per 100,000
.         gen rate = value*100000 
  4.         * Format date
.         gen dateA = date(date, "YMD")
  5.         drop date
  6.         format dateA %dD/M/Y
  7.         * Generate line graph
.         graph twoway line rate date, tlabel(01Apr2019(120)01Apr2022, angle(45
> ) ///
>         format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Dat
> e") ylabel(, labsize(small) ///
>         angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) legend(row(1) size(s
> mall) title("Ethnic categories", size(small)))
  8. 
.         graph export ./output/graphs/line_`this_group'.svg, as(svg) replace
  9.         }
(4 vars, 37 obs)
(note: file ./output/graphs/line_appt_rate.svg not found)
(file ./output/graphs/line_appt_rate.svg written in SVG format)
(4 vars, 37 obs)
(note: file ./output/graphs/line_appt_first_rate.svg not found)
(file ./output/graphs/line_appt_first_rate.svg written in SVG format)

. 
. * Generates line graphs with rate of hospitalisations over time
. foreach this_group in ra cardiac {
  2.         import delimited using ./output/measures/measure_hosp_`this_group'
> _rate.csv, numericcols(3) clear
  3.         * Generate rate per 100,000
.         gen rate = value*100000 
  4.         * Format date
.         gen dateA = date(date, "YMD")
  5.         drop date
  6.         format dateA %dD/M/Y
  7.         * Generate line graph
.         graph twoway line rate date, tlabel(01Mar2018(120)01Apr2022, angle(45
> ) ///
>         format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Dat
> e") ylabel(, labsize(small) ///
>         angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) legend(row(1) size(s
> mall) title("Ethnic categories", size(small)))
  8. 
.         graph export ./output/graphs/line_hosp_`this_group'.svg, as(svg) repl
> ace
  9.         }
(4 vars, 50 obs)
(note: file ./output/graphs/line_hosp_ra.svg not found)
(file ./output/graphs/line_hosp_ra.svg written in SVG format)
(4 vars, 50 obs)
(note: file ./output/graphs/line_hosp_cardiac.svg not found)
(file ./output/graphs/line_hosp_cardiac.svg written in SVG format)

. 
. * Graphs stratified by medium of appointment
. import delimited using ./output/measures/measure_op_appt_medium_rate.csv, num
> ericcols(3) clear
(5 vars, 370 obs)

. * Take out missing medium or if 4 as this is <10 for all months
. drop if op_appt_medium==. | op_appt_medium>=4
(259 observations deleted)

. * Generate new population as all those with medium described
. bys date: egen pop_new = total(population)

. * Calculate rate
. gen rate = (op_appt/pop_new)*100000

. 
. * Format date
. gen dateA = date(date, "YMD")

. drop date

. format dateA %dD/M/Y

. * reshape dataset so columns with rates for each ethnicity 
. reshape wide value rate population op_appt, i(dateA) j(op_appt_medium)
(note: j = 1 2 3)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      111   ->      37
Number of variables                   7   ->      14
j variable (3 values)    op_appt_medium   ->   (dropped)
xij variables:
                                  value   ->   value1 value2 value3
                                   rate   ->   rate1 rate2 rate3
                             population   ->   population1 population2 populati
> on3
                                op_appt   ->   op_appt1 op_appt2 op_appt3
-----------------------------------------------------------------------------

. describe

Contains data
  obs:            37                          
 vars:            14                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dateA           float   %dD/M/Y               
op_appt1        int     %8.0g                 1 op_appt
population1     int     %8.0g                 1 population
value1          float   %9.0g                 1 value
rate1           float   %9.0g                 1 rate
op_appt2        int     %8.0g                 2 op_appt
population2     int     %8.0g                 2 population
value2          float   %9.0g                 2 value
rate2           float   %9.0g                 2 rate
op_appt3        int     %8.0g                 3 op_appt
population3     int     %8.0g                 3 population
value3          float   %9.0g                 3 value
rate3           float   %9.0g                 3 rate
pop_new         float   %9.0g                 
-------------------------------------------------------------------------------
Sorted by: dateA
     Note: Dataset has changed since last saved.

. * Generate line graph
. graph twoway line rate1 rate2 date, tlabel(01Apr2019(120)01Apr2022, angle(45)
>  ///
> format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Date") ylab
> el(, labsize(small) ///
> angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) legend(row(1) size(small) ti
> tle("Ethnic categories", size(small)))

. 
. graph export ./output/graphs/line_op_appt_medium.svg, as(svg) replace
(note: file ./output/graphs/line_op_appt_medium.svg not found)
(file ./output/graphs/line_op_appt_medium.svg written in SVG format)

. 
end of do-file

. . file open output using "/tmp/tmp.Vy9BesqScW", write text replace

. . file write output "success" 

. . file close output

. 
end of do-file


