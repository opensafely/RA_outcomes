
. cap mkdir ./output/graphs

. 
. * Generates line graphs with rate of outpatient appointments over time
. foreach this_group in appt_rate  {
  2.         import delimited using ./output/measures/join/measure_op_`this_gro
> up'.csv, numericcols(3) clear
  3.         * Generate rate per 100,000
.         gen rate = value*100000 
  4.         * Format date
.         gen dateA = date(date, "YMD")
  5.         drop date
  6.         format dateA %dD/M/Y
  7.         * Generate line graph
.         graph twoway line rate dateA, tlabel(01Apr2019(120)01Apr2022, angle(4
> 5) ///
>         format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Dat
> e") ylabel(#5, labsize(small) ///
>         angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) graphregion(fcolor(w
> hite))
  8. 
.         graph export ./output/graphs/line_`this_group'.svg, as(svg) replace
  9.         }
(4 vars, 36 obs)
(note: file ./output/graphs/line_appt_rate.svg not found)
(file ./output/graphs/line_appt_rate.svg written in SVG format)

. 
. * Graphs stratified by medium of appointment
. import delimited using ./output/measures/join/measure_op_appt_medium_rate.csv
> , numericcols(3) clear
(5 vars, 360 obs)

. * Take out missing medium or if 4 as this is <10 for all months
. drop if op_appt_medium==. | op_appt_medium>=4
(252 observations deleted)

. * Combine telephone and telemedicine (2 & 3)
. * Flag for rows to combine
. gen comb = (op_appt_medium == 2 | op_appt_medium == 3)

. bys date: egen tele_appts = total(op_appt) if comb==1
(36 missing values generated)

. bys date: egen tele_pop = total(population) if comb==1
(36 missing values generated)

. replace op_appt = tele_appts if op_appt_medium==2
(36 real changes made)

. replace population = tele_pop if op_appt_medium==2
(36 real changes made)

. drop if op_appt_medium==3
(36 observations deleted)

. drop comb tele_appts tele_pop

. 
. * Generate new population as all those with medium described
. bys date: egen pop_new = total(population)

. * Calculate rate
. gen proportion = (op_appt/pop_new)*100

. 
. * Format date
. gen dateA = date(date, "YMD")

. drop date

. format dateA %dD/M/Y

. * reshape dataset so columns with rates for medium 
. reshape wide value proportion population op_appt, i(dateA) j(op_appt_medium)
(note: j = 1 2)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                       72   ->      36
Number of variables                   7   ->      10
j variable (2 values)    op_appt_medium   ->   (dropped)
xij variables:
                                  value   ->   value1 value2
                             proportion   ->   proportion1 proportion2
                             population   ->   population1 population2
                                op_appt   ->   op_appt1 op_appt2
-----------------------------------------------------------------------------

. describe

Contains data
  obs:            36                          
 vars:            10                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dateA           float   %dD/M/Y               
op_appt1        int     %8.0g                 1 op_appt
population1     int     %8.0g                 1 population
value1          float   %9.0g                 1 value
proportion1     float   %9.0g                 1 proportion
op_appt2        int     %8.0g                 2 op_appt
population2     int     %8.0g                 2 population
value2          float   %9.0g                 2 value
proportion2     float   %9.0g                 2 proportion
pop_new         float   %9.0g                 
-------------------------------------------------------------------------------
Sorted by: dateA
     Note: Dataset has changed since last saved.

. * Label strata
. label var proportion1 "Face to face"

. label var proportion2 "Telephone"

. * Generate line graph
. graph  bar proportion1 proportion2, over(dateA) stack graphregion(fcolor(whit
> e))

. 
. graph export ./output/graphs/line_op_appt_medium.svg, as(svg) replace
(note: file ./output/graphs/line_op_appt_medium.svg not found)
(file ./output/graphs/line_op_appt_medium.svg written in SVG format)

. 
. * Generates line graphs with rate of hospitalisations over time
. foreach this_group in ra ra_emergency {
  2.         import delimited using ./output/measures/join/measure_hosp_`this_g
> roup'_rate.csv, numericcols(3) clear
  3.         * Generate rate per 100,000
.         gen rate = value*100000 
  4.         * Format date
.         gen dateA = date(date, "YMD")
  5.         drop date
  6.         format dateA %dD/M/Y
  7.         * Generate line graph
.         graph twoway line rate dateA, tlabel(01Mar2018(120)01Apr2022, angle(4
> 5) ///
>         format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Dat
> e") ylabel(#5, labsize(small) ///
>         angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) graphregion(fcolor(w
> hite))
  8. 
.         graph export ./output/graphs/line_hosp_`this_group'.svg, as(svg) repl
> ace
  9.         }
(4 vars, 36 obs)
(note: file ./output/graphs/line_hosp_ra.svg not found)
(file ./output/graphs/line_hosp_ra.svg written in SVG format)
(4 vars, 36 obs)
(note: file ./output/graphs/line_hosp_ra_emergency.svg not found)
(file ./output/graphs/line_hosp_ra_emergency.svg written in SVG format)

. 
. * Graphs stratified by type of admission e.g. daycase
. import delimited using ./output/measures/measure_hosp_ra_daycase_rate.csv, nu
> mericcols(3) clear
(5 vars, 216 obs)

. * Drop if ra_daycase missing or is mother-baby record
. drop if (ra_daycase==. | ra_daycase==5 | ra_daycase==8)
(72 observations deleted)

. * Combine 3 & 4 as both ordinary admission
. gen comb = (ra_daycase == 3 | ra_daycase == 4)

. bys date: egen ordin_appts = total(ra_hosp) if comb==1
(72 missing values generated)

. bys date: egen ordin_pop = total(population) if comb==1
(72 missing values generated)

. replace ra_hosp = ordin_appts if ra_daycase==3
(36 real changes made)

. replace population = ordin_pop if ra_daycase==3
(36 real changes made)

. drop if ra_daycase==4
(36 observations deleted)

. drop comb ordin_appts ordin_pop

. * Generate new population as all those with type of admission
. bys date: egen pop_new = total(population)

. * Calculate rate
. gen proportion = (ra_hosp/pop_new)*100

. 
. * Format date
. gen dateA = date(date, "YMD")

. drop date

. format dateA %dD/M/Y

. * reshape dataset so columns with rates for each ethnicity 
. reshape wide value proportion population ra_hosp, i(dateA) j(ra_daycase)
(note: j = 1 2 3)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      108   ->      36
Number of variables                   7   ->      14
j variable (3 values)        ra_daycase   ->   (dropped)
xij variables:
                                  value   ->   value1 value2 value3
                             proportion   ->   proportion1 proportion2 proporti
> on3
                             population   ->   population1 population2 populati
> on3
                                ra_hosp   ->   ra_hosp1 ra_hosp2 ra_hosp3
-----------------------------------------------------------------------------

. describe

Contains data
  obs:            36                          
 vars:            14                          
-------------------------------------------------------------------------------
              storage   display    value
variable name   type    format     label      variable label
-------------------------------------------------------------------------------
dateA           float   %dD/M/Y               
ra_hosp1        int     %8.0g                 1 ra_hosp
population1     int     %8.0g                 1 population
value1          float   %9.0g                 1 value
proportion1     float   %9.0g                 1 proportion
ra_hosp2        int     %8.0g                 2 ra_hosp
population2     int     %8.0g                 2 population
value2          float   %9.0g                 2 value
proportion2     float   %9.0g                 2 proportion
ra_hosp3        int     %8.0g                 3 ra_hosp
population3     int     %8.0g                 3 population
value3          float   %9.0g                 3 value
proportion3     float   %9.0g                 3 proportion
pop_new         float   %9.0g                 
-------------------------------------------------------------------------------
Sorted by: dateA
     Note: Dataset has changed since last saved.

. * Label strata 
. label var proportion1 "Ordinary admission"

. label var proportion2 "Day case"

. label var proportion3 "Regular admission"

. * Generate line graph
. graph bar proportion1 proportion2 proportion3, over(dateA) stack graphregion(
> fcolor(white))

. 
. graph export ./output/graphs/line_ra_daycase.svg, as(svg) replace
(note: file ./output/graphs/line_ra_daycase.svg not found)
(file ./output/graphs/line_ra_daycase.svg written in SVG format)

. 
. * Generates line graphs with rate of prescriptions over time
. foreach this_group in gc opioid_strong opioid_weak ssri  {
  2.         import delimited using ./output/measures/measure_med_`this_group'_
> rate.csv, numericcols(3) clear
  3.         * Generate rate per 100,000
.         gen rate = value*100000 
  4.         * Format date
.         gen dateA = date(date, "YMD")
  5.         drop date
  6.         format dateA %dD/M/Y  
  7.         * Generate line graph
.         graph twoway line rate dateA, tlabel(01Mar2018(120)01Apr2022, angle(4
> 5) ///
>         format(%dM-CY) labsize(small)) ytitle("Rate per 100,000") xtitle("Dat
> e") ylabel(#5, labsize(small) ///
>         angle(0)) yscale(r(0) titlegap(*10)) xmtick(##6) graphregion(fcolor(w
> hite))
  8. 
.         graph export ./output/graphs/line_med_`this_group'.svg, as(svg) repla
> ce
  9.         }
(4 vars, 36 obs)
(note: file ./output/graphs/line_med_gc.svg not found)
(file ./output/graphs/line_med_gc.svg written in SVG format)
(4 vars, 36 obs)
(note: file ./output/graphs/line_med_opioid_strong.svg not found)
(file ./output/graphs/line_med_opioid_strong.svg written in SVG format)
(4 vars, 36 obs)
(note: file ./output/graphs/line_med_opioid_weak.svg not found)
(file ./output/graphs/line_med_opioid_weak.svg written in SVG format)
(4 vars, 36 obs)
(note: file ./output/graphs/line_med_ssri.svg not found)
(file ./output/graphs/line_med_ssri.svg written in SVG format)

. 
end of do-file

. . file open output using "/tmp/tmp.pkVfhCbL8g", write text replace

. . file write output "success" 

. . file close output

. 
end of do-file


