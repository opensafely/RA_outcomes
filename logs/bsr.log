
. 
. cap mkdir ./output/tables

. * Import data
. import delimited using ./output/measures/op/input_bsr_2019-04-01.csv
(36 vars, 10,000 obs)

. 
. * Drop variables not required
. /*drop first_ra_code-has_ra*/
. drop ethnicity-region

. 
. * Format variables
. 
. * formatting gender
. gen male=(sex=="M")

. replace male = 0 if sex == "F"
(0 real changes made)

. label define male 0"Female" 1"Male"

. label values male male

. safetab male, miss
5

       male |      Freq.     Percent        Cum.
------------+-----------------------------------
     Female |      5,068       50.68       50.68
       Male |      4,932       49.32      100.00
------------+-----------------------------------
      Total |     10,000      100.00

. 
. *create a 4 category rural urban variable 
. generate urban_rural_5=.
(10,000 missing values generated)

. la var urban_rural_5 "Rural Urban in five categories"

. replace urban_rural_5=1 if urban_rural==1
(1,303 real changes made)

. replace urban_rural_5=2 if urban_rural==2
(1,232 real changes made)

. replace urban_rural_5=3 if urban_rural==3|urban_rural==4
(2,451 real changes made)

. replace urban_rural_5=4 if urban_rural==5|urban_rural==6
(2,461 real changes made)

. replace urban_rural_5=5 if urban_rural==7|urban_rural==8
(2,553 real changes made)

. label define urban_rural_5 1 "Urban major conurbation" 2 "Urban minor conurba
> tion" 3 "Urban city and town" 4 "Rural town and fringe" 5 "Rural village and 
> dispersed"

. label values urban_rural_5 urban_rural_5

. safetab urban_rural_5, miss
14

        Rural Urban in five |
                 categories |      Freq.     Percent        Cum.
----------------------------+-----------------------------------
    Urban major conurbation |      1,303       13.03       13.03
    Urban minor conurbation |      1,232       12.32       25.35
        Urban city and town |      2,451       24.51       49.86
      Rural town and fringe |      2,461       24.61       74.47
Rural village and dispersed |      2,553       25.53      100.00
----------------------------+-----------------------------------
                      Total |     10,000      100.00

. 
. *generate a binary rural urban (with missing assigned to urban)
. generate urban_rural_bin=.
(10,000 missing values generated)

. replace urban_rural_bin=1 if urban_rural<=4|urban_rural==.
(4,986 real changes made)

. replace urban_rural_bin=0 if urban_rural>4 & urban_rural!=.
(5,014 real changes made)

. label define urban_rural_bin 0 "Rural" 1 "Urban"

. label values urban_rural_bin urban_rural_bin

. safetab urban_rural_bin urban_rural, miss
28

urban_rura |                      urban_rural
     l_bin |         1          2          3          4          5 |     Total
-----------+-------------------------------------------------------+----------
     Rural |         0          0          0          0      1,258 |     5,014 
     Urban |     1,303      1,232      1,208      1,243          0 |     4,986 
-----------+-------------------------------------------------------+----------
     Total |     1,303      1,232      1,208      1,243      1,258 |    10,000 


urban_rura |           urban_rural
     l_bin |         6          7          8 |     Total
-----------+---------------------------------+----------
     Rural |     1,203      1,284      1,269 |     5,014 
     Urban |         0          0          0 |     4,986 
-----------+---------------------------------+----------
     Total |     1,203      1,284      1,269 |    10,000 

. label var urban_rural_bin "Rural-Urban"

. 
. * Define age categories
. * Create age categories
. egen age_cat = cut(age), at(18, 40, 60, 80, 120) icodes
(2152 missing values generated)

. label define age 0 "18 - 40 years" 1 "41 - 60 years" 2 "61 - 80 years" 3 ">80
>  years"

. label values age_cat age

. safetab age_cat, miss
8

      age_cat |      Freq.     Percent        Cum.
--------------+-----------------------------------
18 - 40 years |      2,850       28.50       28.50
41 - 60 years |      2,663       26.63       55.13
61 - 80 years |      1,860       18.60       73.73
    >80 years |        475        4.75       78.48
            . |      2,152       21.52      100.00
--------------+-----------------------------------
        Total |     10,000      100.00

. 
. * Reshape to long format 
. reshape long op_appt_date_ op_appt_medium_, i(patient_id) j(op_appt_number) 
(note: j = 1 2 3 4 5 6 7 8 9 10)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                    10000   ->  100000
Number of variables                  36   ->      19
j variable (10 values)                    ->   op_appt_number
xij variables:
op_appt_date_1 op_appt_date_2 ... op_appt_date_10->op_appt_date_
op_appt_medium_1 op_appt_medium_2 ... op_appt_medium_10->op_appt_medium_
-----------------------------------------------------------------------------

. rename op_appt_date_ op_appt_date 

. rename op_appt_medium_ op_appt_medium

. 
. * set talk type (medium=4) to missing and combine telephone and telemedicine
. replace op_appt_medium = . if op_appt_medium==4
(5,088 real changes made, 5,088 to missing)

. replace op_appt_medium = 2 if op_appt_medium==3
(5,030 real changes made)

. replace op_appt_medium = 0 if op_appt_medium==.
(55,088 real changes made)

. 
. * Format dates
. gen op_appt_dateA = date(op_appt_date, "YMD")
(54,848 missing values generated)

. gen died_fuA = date(died_fu, "YMD")
(50,000 missing values generated)

. gen dereg_dateA = date(dereg_date, "YMD")
(50,000 missing values generated)

. * Follow-up time
. gen end_date = min(died_fuA, dereg_dateA, date("2020-03-31", "YMD"))

. * display value of end date in period
. di date("2020-03-31", "YMD")
22005

. * determine range of dates for outpatient appointments to determine which sho
> uld be dropped
. sum op_appt_dateA

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
op_appt_da~A |     45,152    544.3818    12992.89     -21913      22902

. drop if op_appt_dateA > end_date
(55,860 observations deleted)

. sum op_appt_dateA

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
op_appt_da~A |     44,140    42.08758     12705.4     -21913      22004

. 
. * Categorise number of outpatient appointments
. bys patient_id: egen tot_appts = total(op_appt_dateA!=.)

. sum tot_appts, d

                          tot_appts
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              1
 5%            3              1
10%            3              1       Obs              44,140
25%            4              1       Sum of Wgt.      44,140

50%            5                      Mean           4.935025
                        Largest       Std. Dev.      1.437615
75%            6             10
90%            7             10       Variance       2.066736
95%            7             10       Skewness       .0897944
99%            8             10       Kurtosis       2.862019

. 
. * Determine total number and proportion of in-person and telephone appointmen
> ts
. forvalues i=0/2 {
  2.     bys patient_id: egen tot_medium_`i' = total(op_appt_medium==`i')
  3.     gen prop_medium_`i' = (tot_medium_`i'/tot_appts)*100
  4.     sum prop_medium_`i', d
  5.     }

                        prop_medium_0
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%     16.66667              0
10%           25              0       Obs              44,140
25%           40              0       Sum of Wgt.      44,140

50%           50                      Mean           54.99773
                        Largest       Std. Dev.      23.80864
75%     71.42857            100
90%     83.33334            100       Variance       566.8515
95%          100            100       Skewness      -.0985371
99%          100            100       Kurtosis       2.696028

                        prop_medium_1
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs              44,140
25%            0              0       Sum of Wgt.      44,140

50%            0                      Mean           10.07476
                        Largest       Std. Dev.      14.41599
75%           20            100
90%     33.33333            100       Variance       207.8209
95%           40            100       Skewness        1.53317
99%           50            100       Kurtosis       5.888591

                        prop_medium_2
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs              44,140
25%            0              0       Sum of Wgt.      44,140

50%            0                      Mean           10.01586
                        Largest       Std. Dev.      14.03179
75%           20            100
90%     28.57143            100       Variance       196.8911
95%     33.33333            100       Skewness       1.395069
99%           50            100       Kurtosis       5.028208

. 
. /*gen year = 2019
> 
> preserve
> * Tabulate number of appointments per year
> table1_mc, vars(op_appt_2019_cat cate \ op_appt_2020_cat cate \ op_appt_2021_
> cat cate) clear
> export delimited using ./output/tables/op_appt_yrs.csv
> restore 
> * Tabulate mode of last appointments per year
> preserve 
> table1_mc, vars(outpatient_medium_2019 cate \ outpatient_medium_2020 cate \ o
> utpatient_medium_2021 cate) clear
> export delimited using ./output/tables/bsr_op_appt_medium_yr.csv
> restore 
> * Tabulate overall characteristics 
> preserve
> table1_mc, vars(age_cat cate \ male cate \ urban_rural_5 cate) clear
> export delimited using ./output/tables/bsr_op_chars.csv
> restore
> * Characteristics by mode of appointment
> tempfile tempfile
> forvalues i=2019/2021 {
>     preserve
>     keep if outpatient_medium_`i'==0
>     table1_mc, vars(age_cat cate \ male cate \ urban_rural_5 cate ) clear
>     save `tempfile', replace
>     restore
>     forvalues j=1/2 {
>         preserve
>         keep if outpatient_medium_`i'==`j'
>         table1_mc, vars(age_cat cate \ male cate \ urban_rural_5 cate) clear
>         append using `tempfile'
>         save `tempfile', replace
>         if `j'==2 {
>             export delimited using ./output/tables/bsr_characteristics_strata
> `i'.csv
>         }
>         restore
>     }
> } 
> */  
. /*gen fu_2019 = ((end_date - date("01Apr2019", "DMY")) /365) if end_date<date
> ("31Mar2020", "DMY")
> gen exit = end_date!=.
> replace end_date = date("31Mar2022", "DMY") if end_date==.
> gen start = date("01Apr2019", "DMY")
> 
> stset end_date, failure(exit) origin(start) id(patient_id)
> stsplit time_period, at(365, 730, 1095)
> preserve 
> 
> gen total_appt_2019 = total(outpatient_appt_2019) if time_period==0
> gen total_appt_2020 = total(outpatient_appt_2020) if time_period==365
> gen total_appt_2021 = total(outpatient_appt_2021) if time_period==730
> gen op_appt_no = outpatient_appt_2019 if time_period==0
> replace op_appt_no = outpatient_appt_2020 if time_period==365
> replace op_appt_no = outpatient_appt_2021 if time_period==730
> tab time_period
> sum op_appt_no
> 
> strate op_appt_no if time_period==0
> */
. log close
      name:  <unnamed>
       log:  /workspace/logs/bsr.log
  log type:  text
 closed on:  14 Sep 2022, 13:29:14
-------------------------------------------------------------------------------
